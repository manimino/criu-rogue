#!/usr/bin/env python3
import os
import sys
import subprocess
import time

def run_cmd(cmd, silent=False):
    if silent:
        # CRIU shows errors even when it works. Suppress it.
        return subprocess.check_call(cmd, shell=True,
            stdout=subprocess.DEVNULL,
            stderr=subprocess.DEVNULL)  
    else:
        return subprocess.check_call(cmd, shell=True)

if not len(sys.argv) == 2:
    print('Usage: load savename. View saves with "ls /saves/".')
    sys.exit(1)

savename = sys.argv[1]
savedir = savename
if not savedir.startswith('/'):
    savedir = '/saves/' + savedir

if not os.path.isdir(savedir):
    print('Could not find {} in /saves/.'.format(savename))
    sys.exit(1)

# check if tmux is running already
try:
    pid = subprocess.check_output(["pidof", "tmux"])
    pid = pid.decode("ascii").strip()
except:
    pid = None

if pid is not None:
    print('Found existing tmux with pid(s): [{}]. Exit or kill that first.'.format(pid))
    sys.exit(1)

# load 
cmd = 'criu restore --images-dir {} &'.format(savedir)
run_cmd(cmd, silent=True)

try:
    time.sleep(0.2)
    subprocess.check_output(["pidof", "tmux"])
except:
    print("""
    Could not load {}. 
    If this is a new container, run "tmux attach" once before loading.
    This will initialize the tmux socket, allowing the load to succeed.
    """.format(savename))
    sys.exit(1)

print('Loaded {}. Run "tmux attach" to play.'.format(savename))
